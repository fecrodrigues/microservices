version: "3.7"

services:

  frontend:
    image: fcrodrigues/vuejs-frontend-prod:2.0
    deploy:
      replicas: 3
    restart: always  
    ports: 
      - 80:80
    depends_on:
      - web

  db:
    image: postgres:latest
    deploy:
      replicas: 5
    restart: always  
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
  
  web:
    image: fcrodrigues/python-api:latest
    deploy:
      replicas: 5
    restart: always  
    ports:
      - "8001:8000"
    depends_on:
      - db

  zookeeper:
    image: wurstmeister/zookeeper
    deploy:
      replicas: 3
    restart: always  
    ports:
      - "2181:2181"

  kafka-mq:
    image: wurstmeister/kafka
    links:
      - zookeeper
    deploy:
      replicas: 3
    restart: always  
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "contact-messages:1:1"    
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  mongo-db: 
    image: "mongo:latest"
    deploy:
      replicas: 3
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports: 
      - "27017:27017"
    #volumes:
      #- ./db/:/data/db

  api-contact: 
    image: "brenomsf/api_contact_jvm:latest"
    deploy:
      replicas: 3
    restart: always
    ports: 
      - "8081:8080"
    links:
      - mongo-db
      - kafka-mq
    depends_on:
      - mongo-db
      - kafka-mq
